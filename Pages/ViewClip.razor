@page "/view/{Url}"
@inject HttpClient Http

<Container Fluid>
    <div class="flex-row">
        <div class="margin-right-auto flex-row">
            <DisplayHeading Size="DisplayHeadingSize.Is4" TextColor="TextColor.Primary">Random Nani Clips
            </DisplayHeading>
            <Paragraph>
                <Text TextColor="TextColor.Primary">she'll be back soon <Image
                        Source="https://cdn.betterttv.net/emote/60024230c96152314ad681e7/1x"></Image></Text>
            </Paragraph>
        </div>
        <div class="margin-left-auto">
            <Paragraph>
                <Link To="https://twitch.tv/nani" Target="Target.Blank">https://twitch.tv/nani</Link>
            </Paragraph>
            <Paragraph>
                <Link To="https://twitter.com/nanilul" Target="Target.Blank">https://twitter.com/nanilul</Link>
            </Paragraph>
        </div>
    </div>
    <div class="main">
        <Player VideoUrl="@Clip" />
    </div>
</Container>

@code {
    [Parameter]
    public string Url { get; set; }
    private string Clip;
    private string[] Clips;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
    }

    protected override async Task OnParametersSetAsync()
    {
        await base.OnParametersSetAsync();
        Clips = await Http.GetFromJsonAsync<string[]>("data/clips.json");
        var urlParam = Clips.Where(x => x == $"https://clips-media-assets2.twitch.tv/{Url}.mp4").FirstOrDefault();
        Clip = urlParam;
    }
}