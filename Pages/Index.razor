@page "/"
@using static RandomNaniClip.Extensions.ListExtensions
@inject HttpClient Http

<Container>
    <div class="flex-row">
        <div class="margin-right-auto flex-row">
            <DisplayHeading Size="DisplayHeadingSize.Is4" TextColor="TextColor.Primary">Random Nani Clips
            </DisplayHeading>
            <Paragraph>
                <Text TextColor="TextColor.Primary">she'll be back soon <Image
                        Source="https://cdn.betterttv.net/emote/60024230c96152314ad681e7/1x"></Image></Text>
            </Paragraph>
        </div>
        <div class="margin-left-auto">
            <Paragraph>
                <Link To="https://twitch.tv/nani" Target="Target.Blank">https://twitch.tv/nani</Link>
            </Paragraph>
            <Paragraph>
                <Link To="https://twitter.com/nanilul" Target="Target.Blank">https://twitter.com/nanilul</Link>
            </Paragraph>
        </div>
    </div>
</Container>
<Divider></Divider>
<Container Fluid>
    <div class="main">
        @if (isLoaded)
        {
            <Player VideoUrl="@currentClip" AutoPlay="@autoPlay">
                <div style="position: absolute; top: 0; right: 0; z-index: 3; padding: 5px">
                    <Button style="background-color: #00b3ff;" Class="btn-margin-left" TextColor="TextColor.Secondary"
                    Clicked="GetNewClip">
                        New Clip
                    </Button>
                </div>
            </Player>
        }
    </div>
</Container>

@code {
    private IList<string> clips;
    private int currentClipIndex = 0;
    private string currentClip;
    private bool autoPlay = false;
    private bool isLoaded = false;

    private void GetNewClip()
    {
        currentClipIndex = (currentClipIndex + 1) % clips.Count;
        currentClip = clips[currentClipIndex];
        autoPlay = true;
    }

    protected override async Task OnInitializedAsync()
    {
        clips = await Http.GetFromJsonAsync<IList<string>>("data/clips.json");
        clips.ShuffleMe();
        currentClip = clips[currentClipIndex];
        isLoaded = true;
    }
}